<template>
  <view class='container'>
    <view class="action-wrapper">
      <repeat for={{actions}} item='item' key='index' index='index'>
        <view class="action-item"  :class="{'first-item': index === 0, 'last-item': index === actions.length - 1, 'next-item': index === actions.length - 2}">
          <view class="action">
            <text class="action-label">{{item.label}}</text>
            <switch checked={{item.checked}} color='#3a8ef0' @change="update({{index}})"></switch>
          </view>
        </view>
      </repeat>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import {getResume, updateResume, updateSms, getSms} from '../api/index.js'

export default class Config extends wepy.page {
  data = {
    actions: [{
      src: '../assets/profile/user.png',
      label: '公开您的简历',
      checked: false
    }, {
      src: '../assets/profile/poster.png',
      label: '接收我们的短信',
      checked: false
    }],
    info: {}
  }
  onLoad() {
    getResume().then(res => {
      this.info = res.data || {}
      this.actions[0].checked = this.info.status === '1' || this.info.status === 1
      this.$apply()
    })
    getSms().then(res => {
      this.actions[1].checked = res.data.issms === '1' || res.data.issms === 1
    })
  }
  methods = {
    update(index, e) {
      const value = e.detail.value
      this.actions[index].checked = value
      if (index === 0) {
        // update status
        this.info.status = Number(value).toString()
        updateResume(this.info).then(res => {
          if (res.code === 500) {
            this.actions[index].checked = !value
            this.info.status = Number(!value).toString()
          }
        })
      } else {
        // update sms
        updateSms({
          issms: Number(value).toString()
        }).then(res => {
          if (res.code === 500) {
            this.actions[index].checked = !value
          }
        })
      }
    }
  }
}
</script>

<style lang='scss'>
page {
  background: #f5f5f4;
  font-size: 28rpx;
  color: #000;
  padding: 0 32rpx;
}

.action-wrapper {
  .action-item {
    padding: 0 16rpx;
    background: #fff;
    width: 750rpx - 64rpx;
    box-sizing: border-box;
    .action {
      border-bottom: 1rpx solid #ddd;
      display: flex;
      height: 80rpx;
      align-items: center;
      .action-label {
        flex: 1;
      }
    }
    &.first-item, &.last-item {
      .action {
        border-bottom: none;
      }
      margin-top: 32rpx;
      margin-bottom: 32rpx;
    }
    &.next-item .action{
      border-bottom: none;
    }
  }
}

</style>