<template>
  <view>
    <view class='index-container' wx:if="{{status !== 2}}">
      <view class='input-wrapper'>
        <input type="text" placeholder="按人名搜索" @confirm="search">
      </view>
      <repeat for='{{resumeList}}' item='resume' key='index'>
        <view class="jobs" @tap='comment({{resume.userid}})'>
          <resume :resume.sync="resume" :userid.sync="resume.userid"></resume>
        </view>
      </repeat>
    </view>
    <view class="no-data" wx:if="{{status !== 2 && (!resumeList || !resumeList.length)}}">
      <text>暂无数据</text>
    </view>
    <view class="index-container" wx:if="{{status === 2}}">
      <repeat for="{{invitionList}}" item="invition" key="index">
        <view class="invition">
          <text class="block">{{invition.companyname}}</text>
          <text class="block">{{invition.company}}</text>
          <button class='primary' type='primary' @tap="agree({{invition}})">接受招募</button>
        </view>
      </repeat>
    </view>
    <view class="no-data" wx:if="{{status === 2 && (!invitionList || !invitionList.length)}}">
      <text>暂无数据</text>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import resume from '../components/resume-item'
import { getAllRecruit, getSms, getInvitionList, hire } from '../api'
// import toast from 'toast'

export default class Application extends wepy.page {
  config = {
    navigationBarTitleText: '我的招募'
  }
  components = {
    resume
    // toast
  }
  data = {
    resumeList: [],
    status: null,
    invitionList: []
  }
  onLoad() {
    this.methods.search.call(this)
    getSms().then(res => {
      this.status = res.status
      this.$apply()
    })
    getInvitionList().then(res => {
      if (res.code === 0) {
        invitionList = res.data || []
      }
    })
  }
  methods = {
    search(e) {
      const params = {}
      if (e) {
        params.username = e.detail.value
      }
      getAllRecruit(params).then(res => {
        this.resumeList = (res.data || []).map(row => {
          return row.resumeDO
        })
        this.$apply()
      })
    },
    comment(id) {
      wx.navigateTo({
        url: `comment?userid=${id}`
      })
    },
    agree({uid, oid}) {
      wx.showModal({
        title: '提示',
        content: '接受招募即代表你入职企业，对方将有权对您的简历进行评价。请在确认入职后接受招募。',
        success (res) {
          if (res.confirm) {
            hire({
              uid,
              oid,
              status: 2
            }).then(data => {
              if (data.code === 0) {
                setTimeout(wx.navigateBack, 1000)
              }
            })
          }
        }
      })
    }
  }
}
</script>

<style lang='scss'>
page {
  background: #f5f5f4;
}
.index-container {
  font-size: 24rpx;
  position: relative;
}
.input-wrapper {
  height: 100rpx;
  display: flex;
  justify-content: center;
  align-items: center;
  input {
    height: 80rpx;
    line-height: 80rpx;
    font-size: 32rpx;
    width: 700rpx;
    border-radius: 10rpx;
    padding-left: 20rpx;
    background: #fff;
    color: #333;
  }
}
.no-data {
  margin-top: 400rpx;
  text-align: center;
  font-size: 40rpx;
}
</style>
